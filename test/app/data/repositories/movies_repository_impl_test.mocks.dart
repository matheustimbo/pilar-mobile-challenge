// Mocks generated by Mockito 5.4.4 from annotations
// in pilar_mobile_challenge/test/app/data/repositories/movies_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pilar_mobile_challenge/app/data/datasources/movies_datasource.dart'
    as _i5;
import 'package:pilar_mobile_challenge/app/data/models/movie_credits.dart'
    as _i4;
import 'package:pilar_mobile_challenge/app/data/models/movie_details.dart'
    as _i3;
import 'package:pilar_mobile_challenge/app/data/models/movies_list_response.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMoviesListResponse_0 extends _i1.SmartFake
    implements _i2.MoviesListResponse {
  _FakeMoviesListResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetails_1 extends _i1.SmartFake implements _i3.MovieDetails {
  _FakeMovieDetails_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieCredits_2 extends _i1.SmartFake implements _i4.MovieCredits {
  _FakeMovieCredits_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesDatasource extends _i1.Mock implements _i5.MoviesDatasource {
  @override
  _i6.Future<_i2.MoviesListResponse> getPopularMovies(
    int? page,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [
            page,
            language,
          ],
        ),
        returnValue:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #getPopularMovies,
            [
              page,
              language,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #getPopularMovies,
            [
              page,
              language,
            ],
          ),
        )),
      ) as _i6.Future<_i2.MoviesListResponse>);

  @override
  _i6.Future<_i2.MoviesListResponse> getTopRatedMovies(
    int? page,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [
            page,
            language,
          ],
        ),
        returnValue:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [
              page,
              language,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [
              page,
              language,
            ],
          ),
        )),
      ) as _i6.Future<_i2.MoviesListResponse>);

  @override
  _i6.Future<_i2.MoviesListResponse> getNowPlayingMovies(
    int? page,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [
            page,
            language,
          ],
        ),
        returnValue:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #getNowPlayingMovies,
            [
              page,
              language,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #getNowPlayingMovies,
            [
              page,
              language,
            ],
          ),
        )),
      ) as _i6.Future<_i2.MoviesListResponse>);

  @override
  _i6.Future<_i2.MoviesListResponse> searchMoviesByTitle(
    String? query,
    int? page,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMoviesByTitle,
          [
            query,
            page,
            language,
          ],
        ),
        returnValue:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #searchMoviesByTitle,
            [
              query,
              page,
              language,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.MoviesListResponse>.value(_FakeMoviesListResponse_0(
          this,
          Invocation.method(
            #searchMoviesByTitle,
            [
              query,
              page,
              language,
            ],
          ),
        )),
      ) as _i6.Future<_i2.MoviesListResponse>);

  @override
  _i6.Future<_i3.MovieDetails> getMovieDetails(
    int? movieId,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [
            movieId,
            language,
          ],
        ),
        returnValue: _i6.Future<_i3.MovieDetails>.value(_FakeMovieDetails_1(
          this,
          Invocation.method(
            #getMovieDetails,
            [
              movieId,
              language,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.MovieDetails>.value(_FakeMovieDetails_1(
          this,
          Invocation.method(
            #getMovieDetails,
            [
              movieId,
              language,
            ],
          ),
        )),
      ) as _i6.Future<_i3.MovieDetails>);

  @override
  _i6.Future<_i4.MovieCredits> getMovieCredits(
    int? movieId,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieCredits,
          [
            movieId,
            language,
          ],
        ),
        returnValue: _i6.Future<_i4.MovieCredits>.value(_FakeMovieCredits_2(
          this,
          Invocation.method(
            #getMovieCredits,
            [
              movieId,
              language,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.MovieCredits>.value(_FakeMovieCredits_2(
          this,
          Invocation.method(
            #getMovieCredits,
            [
              movieId,
              language,
            ],
          ),
        )),
      ) as _i6.Future<_i4.MovieCredits>);
}
